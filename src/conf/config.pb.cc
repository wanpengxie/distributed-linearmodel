// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protos {

namespace {

const ::google::protobuf::Descriptor* FtrlConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FtrlConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* SlotConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SlotConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllConfig_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* VectorType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_config_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_config_2eproto() {
  protobuf_AddDesc_config_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "config.proto");
  GOOGLE_CHECK(file != NULL);
  FtrlConfig_descriptor_ = file->message_type(0);
  static const int FtrlConfig_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, l1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, l2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, alpha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, beta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, fm_alpha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, fm_beta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, fm_l1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, fm_l2_),
  };
  FtrlConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FtrlConfig_descriptor_,
      FtrlConfig::default_instance_,
      FtrlConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(FtrlConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FtrlConfig, _is_default_instance_));
  SlotConfig_descriptor_ = file->message_type(1);
  static const int SlotConfig_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, slot_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, vec_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, filter_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, cross_),
  };
  SlotConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SlotConfig_descriptor_,
      SlotConfig::default_instance_,
      SlotConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(SlotConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SlotConfig, _is_default_instance_));
  AllConfig_descriptor_ = file->message_type(2);
  static const int AllConfig_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, embedding_dim_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, ftrl_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, slot_whitelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, need_output_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, save_model_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, save_inc_model_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, load_model_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, load_inc_model_path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, train_path_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, test_path_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, filter_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, delay_step_),
  };
  AllConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AllConfig_descriptor_,
      AllConfig::default_instance_,
      AllConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(AllConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllConfig, _is_default_instance_));
  VectorType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_config_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FtrlConfig_descriptor_, &FtrlConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SlotConfig_descriptor_, &SlotConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AllConfig_descriptor_, &AllConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_config_2eproto() {
  delete FtrlConfig::default_instance_;
  delete FtrlConfig_reflection_;
  delete SlotConfig::default_instance_;
  delete SlotConfig_reflection_;
  delete AllConfig::default_instance_;
  delete AllConfig_reflection_;
}

void protobuf_AddDesc_config_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_config_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014config.proto\022\006protos\"\202\001\n\nFtrlConfig\022\n\n"
    "\002l1\030\001 \001(\002\022\n\n\002l2\030\002 \001(\002\022\r\n\005alpha\030\003 \001(\002\022\014\n\004"
    "beta\030\004 \001(\002\022\020\n\010fm_alpha\030\005 \001(\002\022\017\n\007fm_beta\030"
    "\006 \001(\002\022\r\n\005fm_l1\030\007 \001(\002\022\r\n\005fm_l2\030\010 \001(\002\"\237\001\n\n"
    "SlotConfig\022\017\n\007slot_id\030\001 \001(\004\022\014\n\004name\030\002 \001("
    "\t\022\'\n\013slot_config\030\003 \001(\0132\022.protos.FtrlConf"
    "ig\022$\n\010vec_type\030\004 \001(\0162\022.protos.VectorType"
    "\022\024\n\014filter_count\030\005 \001(\r\022\r\n\005cross\030\006 \001(\005\"\331\002"
    "\n\tAllConfig\022\025\n\rembedding_dim\030\001 \001(\r\022\'\n\013ft"
    "rl_config\030\002 \001(\0132\022.protos.FtrlConfig\022*\n\016s"
    "lot_whitelist\030\003 \003(\0132\022.protos.SlotConfig\022"
    "\031\n\021need_output_model\030\004 \001(\010\022\027\n\017save_model"
    "_path\030\005 \001(\t\022\033\n\023save_inc_model_path\030\006 \001(\t"
    "\022\027\n\017load_model_path\030\007 \001(\t\022\033\n\023load_inc_mo"
    "del_path\030\010 \001(\t\022\027\n\017train_path_list\030\t \003(\t\022"
    "\026\n\016test_path_list\030\n \003(\t\022\024\n\014filter_count\030"
    "\013 \001(\r\022\022\n\ndelay_step\030\014 \001(\r*B\n\nVectorType\022"
    "\010\n\004BIAS\020\000\022\010\n\004LEFT\020\001\022\t\n\005RIGHT\020\002\022\t\n\005VLEFT\020"
    "\003\022\n\n\006VRIGHT\020\004b\006proto3", 741);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "config.proto", &protobuf_RegisterTypes);
  FtrlConfig::default_instance_ = new FtrlConfig();
  SlotConfig::default_instance_ = new SlotConfig();
  AllConfig::default_instance_ = new AllConfig();
  FtrlConfig::default_instance_->InitAsDefaultInstance();
  SlotConfig::default_instance_->InitAsDefaultInstance();
  AllConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_config_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_config_2eproto {
  StaticDescriptorInitializer_config_2eproto() {
    protobuf_AddDesc_config_2eproto();
  }
} static_descriptor_initializer_config_2eproto_;
const ::google::protobuf::EnumDescriptor* VectorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VectorType_descriptor_;
}
bool VectorType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FtrlConfig::kL1FieldNumber;
const int FtrlConfig::kL2FieldNumber;
const int FtrlConfig::kAlphaFieldNumber;
const int FtrlConfig::kBetaFieldNumber;
const int FtrlConfig::kFmAlphaFieldNumber;
const int FtrlConfig::kFmBetaFieldNumber;
const int FtrlConfig::kFmL1FieldNumber;
const int FtrlConfig::kFmL2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FtrlConfig::FtrlConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.FtrlConfig)
}

void FtrlConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FtrlConfig::FtrlConfig(const FtrlConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.FtrlConfig)
}

void FtrlConfig::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  l1_ = 0;
  l2_ = 0;
  alpha_ = 0;
  beta_ = 0;
  fm_alpha_ = 0;
  fm_beta_ = 0;
  fm_l1_ = 0;
  fm_l2_ = 0;
}

FtrlConfig::~FtrlConfig() {
  // @@protoc_insertion_point(destructor:protos.FtrlConfig)
  SharedDtor();
}

void FtrlConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FtrlConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FtrlConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FtrlConfig_descriptor_;
}

const FtrlConfig& FtrlConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

FtrlConfig* FtrlConfig::default_instance_ = NULL;

FtrlConfig* FtrlConfig::New(::google::protobuf::Arena* arena) const {
  FtrlConfig* n = new FtrlConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FtrlConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.FtrlConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FtrlConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FtrlConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(l1_, fm_l2_);

#undef ZR_HELPER_
#undef ZR_

}

bool FtrlConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.FtrlConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float l1 = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_l2;
        break;
      }

      // optional float l2 = 2;
      case 2: {
        if (tag == 21) {
         parse_l2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &l2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_alpha;
        break;
      }

      // optional float alpha = 3;
      case 3: {
        if (tag == 29) {
         parse_alpha:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &alpha_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_beta;
        break;
      }

      // optional float beta = 4;
      case 4: {
        if (tag == 37) {
         parse_beta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &beta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_fm_alpha;
        break;
      }

      // optional float fm_alpha = 5;
      case 5: {
        if (tag == 45) {
         parse_fm_alpha:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fm_alpha_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_fm_beta;
        break;
      }

      // optional float fm_beta = 6;
      case 6: {
        if (tag == 53) {
         parse_fm_beta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fm_beta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_fm_l1;
        break;
      }

      // optional float fm_l1 = 7;
      case 7: {
        if (tag == 61) {
         parse_fm_l1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fm_l1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_fm_l2;
        break;
      }

      // optional float fm_l2 = 8;
      case 8: {
        if (tag == 69) {
         parse_fm_l2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fm_l2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.FtrlConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.FtrlConfig)
  return false;
#undef DO_
}

void FtrlConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.FtrlConfig)
  // optional float l1 = 1;
  if (this->l1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->l1(), output);
  }

  // optional float l2 = 2;
  if (this->l2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->l2(), output);
  }

  // optional float alpha = 3;
  if (this->alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->alpha(), output);
  }

  // optional float beta = 4;
  if (this->beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->beta(), output);
  }

  // optional float fm_alpha = 5;
  if (this->fm_alpha() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->fm_alpha(), output);
  }

  // optional float fm_beta = 6;
  if (this->fm_beta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->fm_beta(), output);
  }

  // optional float fm_l1 = 7;
  if (this->fm_l1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->fm_l1(), output);
  }

  // optional float fm_l2 = 8;
  if (this->fm_l2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->fm_l2(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.FtrlConfig)
}

::google::protobuf::uint8* FtrlConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.FtrlConfig)
  // optional float l1 = 1;
  if (this->l1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->l1(), target);
  }

  // optional float l2 = 2;
  if (this->l2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->l2(), target);
  }

  // optional float alpha = 3;
  if (this->alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->alpha(), target);
  }

  // optional float beta = 4;
  if (this->beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->beta(), target);
  }

  // optional float fm_alpha = 5;
  if (this->fm_alpha() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->fm_alpha(), target);
  }

  // optional float fm_beta = 6;
  if (this->fm_beta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->fm_beta(), target);
  }

  // optional float fm_l1 = 7;
  if (this->fm_l1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->fm_l1(), target);
  }

  // optional float fm_l2 = 8;
  if (this->fm_l2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->fm_l2(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.FtrlConfig)
  return target;
}

int FtrlConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.FtrlConfig)
  int total_size = 0;

  // optional float l1 = 1;
  if (this->l1() != 0) {
    total_size += 1 + 4;
  }

  // optional float l2 = 2;
  if (this->l2() != 0) {
    total_size += 1 + 4;
  }

  // optional float alpha = 3;
  if (this->alpha() != 0) {
    total_size += 1 + 4;
  }

  // optional float beta = 4;
  if (this->beta() != 0) {
    total_size += 1 + 4;
  }

  // optional float fm_alpha = 5;
  if (this->fm_alpha() != 0) {
    total_size += 1 + 4;
  }

  // optional float fm_beta = 6;
  if (this->fm_beta() != 0) {
    total_size += 1 + 4;
  }

  // optional float fm_l1 = 7;
  if (this->fm_l1() != 0) {
    total_size += 1 + 4;
  }

  // optional float fm_l2 = 8;
  if (this->fm_l2() != 0) {
    total_size += 1 + 4;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FtrlConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.FtrlConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FtrlConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FtrlConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.FtrlConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.FtrlConfig)
    MergeFrom(*source);
  }
}

void FtrlConfig::MergeFrom(const FtrlConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.FtrlConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.l1() != 0) {
    set_l1(from.l1());
  }
  if (from.l2() != 0) {
    set_l2(from.l2());
  }
  if (from.alpha() != 0) {
    set_alpha(from.alpha());
  }
  if (from.beta() != 0) {
    set_beta(from.beta());
  }
  if (from.fm_alpha() != 0) {
    set_fm_alpha(from.fm_alpha());
  }
  if (from.fm_beta() != 0) {
    set_fm_beta(from.fm_beta());
  }
  if (from.fm_l1() != 0) {
    set_fm_l1(from.fm_l1());
  }
  if (from.fm_l2() != 0) {
    set_fm_l2(from.fm_l2());
  }
}

void FtrlConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.FtrlConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FtrlConfig::CopyFrom(const FtrlConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.FtrlConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FtrlConfig::IsInitialized() const {

  return true;
}

void FtrlConfig::Swap(FtrlConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FtrlConfig::InternalSwap(FtrlConfig* other) {
  std::swap(l1_, other->l1_);
  std::swap(l2_, other->l2_);
  std::swap(alpha_, other->alpha_);
  std::swap(beta_, other->beta_);
  std::swap(fm_alpha_, other->fm_alpha_);
  std::swap(fm_beta_, other->fm_beta_);
  std::swap(fm_l1_, other->fm_l1_);
  std::swap(fm_l2_, other->fm_l2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FtrlConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FtrlConfig_descriptor_;
  metadata.reflection = FtrlConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FtrlConfig

// optional float l1 = 1;
void FtrlConfig::clear_l1() {
  l1_ = 0;
}
 float FtrlConfig::l1() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.l1)
  return l1_;
}
 void FtrlConfig::set_l1(float value) {
  
  l1_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.l1)
}

// optional float l2 = 2;
void FtrlConfig::clear_l2() {
  l2_ = 0;
}
 float FtrlConfig::l2() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.l2)
  return l2_;
}
 void FtrlConfig::set_l2(float value) {
  
  l2_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.l2)
}

// optional float alpha = 3;
void FtrlConfig::clear_alpha() {
  alpha_ = 0;
}
 float FtrlConfig::alpha() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.alpha)
  return alpha_;
}
 void FtrlConfig::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.alpha)
}

// optional float beta = 4;
void FtrlConfig::clear_beta() {
  beta_ = 0;
}
 float FtrlConfig::beta() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.beta)
  return beta_;
}
 void FtrlConfig::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.beta)
}

// optional float fm_alpha = 5;
void FtrlConfig::clear_fm_alpha() {
  fm_alpha_ = 0;
}
 float FtrlConfig::fm_alpha() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.fm_alpha)
  return fm_alpha_;
}
 void FtrlConfig::set_fm_alpha(float value) {
  
  fm_alpha_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.fm_alpha)
}

// optional float fm_beta = 6;
void FtrlConfig::clear_fm_beta() {
  fm_beta_ = 0;
}
 float FtrlConfig::fm_beta() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.fm_beta)
  return fm_beta_;
}
 void FtrlConfig::set_fm_beta(float value) {
  
  fm_beta_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.fm_beta)
}

// optional float fm_l1 = 7;
void FtrlConfig::clear_fm_l1() {
  fm_l1_ = 0;
}
 float FtrlConfig::fm_l1() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.fm_l1)
  return fm_l1_;
}
 void FtrlConfig::set_fm_l1(float value) {
  
  fm_l1_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.fm_l1)
}

// optional float fm_l2 = 8;
void FtrlConfig::clear_fm_l2() {
  fm_l2_ = 0;
}
 float FtrlConfig::fm_l2() const {
  // @@protoc_insertion_point(field_get:protos.FtrlConfig.fm_l2)
  return fm_l2_;
}
 void FtrlConfig::set_fm_l2(float value) {
  
  fm_l2_ = value;
  // @@protoc_insertion_point(field_set:protos.FtrlConfig.fm_l2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SlotConfig::kSlotIdFieldNumber;
const int SlotConfig::kNameFieldNumber;
const int SlotConfig::kSlotConfigFieldNumber;
const int SlotConfig::kVecTypeFieldNumber;
const int SlotConfig::kFilterCountFieldNumber;
const int SlotConfig::kCrossFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SlotConfig::SlotConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.SlotConfig)
}

void SlotConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  slot_config_ = const_cast< ::protos::FtrlConfig*>(&::protos::FtrlConfig::default_instance());
}

SlotConfig::SlotConfig(const SlotConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.SlotConfig)
}

void SlotConfig::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  slot_id_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slot_config_ = NULL;
  vec_type_ = 0;
  filter_count_ = 0u;
  cross_ = 0;
}

SlotConfig::~SlotConfig() {
  // @@protoc_insertion_point(destructor:protos.SlotConfig)
  SharedDtor();
}

void SlotConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete slot_config_;
  }
}

void SlotConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SlotConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SlotConfig_descriptor_;
}

const SlotConfig& SlotConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

SlotConfig* SlotConfig::default_instance_ = NULL;

SlotConfig* SlotConfig::New(::google::protobuf::Arena* arena) const {
  SlotConfig* n = new SlotConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SlotConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.SlotConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SlotConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SlotConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vec_type_, cross_);
  slot_id_ = GOOGLE_ULONGLONG(0);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && slot_config_ != NULL) delete slot_config_;
  slot_config_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool SlotConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.SlotConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 slot_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &slot_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.SlotConfig.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_slot_config;
        break;
      }

      // optional .protos.FtrlConfig slot_config = 3;
      case 3: {
        if (tag == 26) {
         parse_slot_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_slot_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_vec_type;
        break;
      }

      // optional .protos.VectorType vec_type = 4;
      case 4: {
        if (tag == 32) {
         parse_vec_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_vec_type(static_cast< ::protos::VectorType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_filter_count;
        break;
      }

      // optional uint32 filter_count = 5;
      case 5: {
        if (tag == 40) {
         parse_filter_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filter_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_cross;
        break;
      }

      // optional int32 cross = 6;
      case 6: {
        if (tag == 48) {
         parse_cross:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cross_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.SlotConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.SlotConfig)
  return false;
#undef DO_
}

void SlotConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.SlotConfig)
  // optional uint64 slot_id = 1;
  if (this->slot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->slot_id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SlotConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .protos.FtrlConfig slot_config = 3;
  if (this->has_slot_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->slot_config_, output);
  }

  // optional .protos.VectorType vec_type = 4;
  if (this->vec_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->vec_type(), output);
  }

  // optional uint32 filter_count = 5;
  if (this->filter_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->filter_count(), output);
  }

  // optional int32 cross = 6;
  if (this->cross() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cross(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.SlotConfig)
}

::google::protobuf::uint8* SlotConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.SlotConfig)
  // optional uint64 slot_id = 1;
  if (this->slot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->slot_id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.SlotConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .protos.FtrlConfig slot_config = 3;
  if (this->has_slot_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->slot_config_, false, target);
  }

  // optional .protos.VectorType vec_type = 4;
  if (this->vec_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->vec_type(), target);
  }

  // optional uint32 filter_count = 5;
  if (this->filter_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->filter_count(), target);
  }

  // optional int32 cross = 6;
  if (this->cross() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cross(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.SlotConfig)
  return target;
}

int SlotConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.SlotConfig)
  int total_size = 0;

  // optional uint64 slot_id = 1;
  if (this->slot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->slot_id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .protos.FtrlConfig slot_config = 3;
  if (this->has_slot_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->slot_config_);
  }

  // optional .protos.VectorType vec_type = 4;
  if (this->vec_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->vec_type());
  }

  // optional uint32 filter_count = 5;
  if (this->filter_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filter_count());
  }

  // optional int32 cross = 6;
  if (this->cross() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cross());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SlotConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.SlotConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SlotConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SlotConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.SlotConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.SlotConfig)
    MergeFrom(*source);
  }
}

void SlotConfig::MergeFrom(const SlotConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.SlotConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.slot_id() != 0) {
    set_slot_id(from.slot_id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_slot_config()) {
    mutable_slot_config()->::protos::FtrlConfig::MergeFrom(from.slot_config());
  }
  if (from.vec_type() != 0) {
    set_vec_type(from.vec_type());
  }
  if (from.filter_count() != 0) {
    set_filter_count(from.filter_count());
  }
  if (from.cross() != 0) {
    set_cross(from.cross());
  }
}

void SlotConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.SlotConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlotConfig::CopyFrom(const SlotConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.SlotConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlotConfig::IsInitialized() const {

  return true;
}

void SlotConfig::Swap(SlotConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SlotConfig::InternalSwap(SlotConfig* other) {
  std::swap(slot_id_, other->slot_id_);
  name_.Swap(&other->name_);
  std::swap(slot_config_, other->slot_config_);
  std::swap(vec_type_, other->vec_type_);
  std::swap(filter_count_, other->filter_count_);
  std::swap(cross_, other->cross_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SlotConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SlotConfig_descriptor_;
  metadata.reflection = SlotConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SlotConfig

// optional uint64 slot_id = 1;
void SlotConfig::clear_slot_id() {
  slot_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SlotConfig::slot_id() const {
  // @@protoc_insertion_point(field_get:protos.SlotConfig.slot_id)
  return slot_id_;
}
 void SlotConfig::set_slot_id(::google::protobuf::uint64 value) {
  
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:protos.SlotConfig.slot_id)
}

// optional string name = 2;
void SlotConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SlotConfig::name() const {
  // @@protoc_insertion_point(field_get:protos.SlotConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SlotConfig::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.SlotConfig.name)
}
 void SlotConfig::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.SlotConfig.name)
}
 void SlotConfig::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.SlotConfig.name)
}
 ::std::string* SlotConfig::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:protos.SlotConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SlotConfig::release_name() {
  // @@protoc_insertion_point(field_release:protos.SlotConfig.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SlotConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protos.SlotConfig.name)
}

// optional .protos.FtrlConfig slot_config = 3;
bool SlotConfig::has_slot_config() const {
  return !_is_default_instance_ && slot_config_ != NULL;
}
void SlotConfig::clear_slot_config() {
  if (GetArenaNoVirtual() == NULL && slot_config_ != NULL) delete slot_config_;
  slot_config_ = NULL;
}
const ::protos::FtrlConfig& SlotConfig::slot_config() const {
  // @@protoc_insertion_point(field_get:protos.SlotConfig.slot_config)
  return slot_config_ != NULL ? *slot_config_ : *default_instance_->slot_config_;
}
::protos::FtrlConfig* SlotConfig::mutable_slot_config() {
  
  if (slot_config_ == NULL) {
    slot_config_ = new ::protos::FtrlConfig;
  }
  // @@protoc_insertion_point(field_mutable:protos.SlotConfig.slot_config)
  return slot_config_;
}
::protos::FtrlConfig* SlotConfig::release_slot_config() {
  // @@protoc_insertion_point(field_release:protos.SlotConfig.slot_config)
  
  ::protos::FtrlConfig* temp = slot_config_;
  slot_config_ = NULL;
  return temp;
}
void SlotConfig::set_allocated_slot_config(::protos::FtrlConfig* slot_config) {
  delete slot_config_;
  slot_config_ = slot_config;
  if (slot_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protos.SlotConfig.slot_config)
}

// optional .protos.VectorType vec_type = 4;
void SlotConfig::clear_vec_type() {
  vec_type_ = 0;
}
 ::protos::VectorType SlotConfig::vec_type() const {
  // @@protoc_insertion_point(field_get:protos.SlotConfig.vec_type)
  return static_cast< ::protos::VectorType >(vec_type_);
}
 void SlotConfig::set_vec_type(::protos::VectorType value) {
  
  vec_type_ = value;
  // @@protoc_insertion_point(field_set:protos.SlotConfig.vec_type)
}

// optional uint32 filter_count = 5;
void SlotConfig::clear_filter_count() {
  filter_count_ = 0u;
}
 ::google::protobuf::uint32 SlotConfig::filter_count() const {
  // @@protoc_insertion_point(field_get:protos.SlotConfig.filter_count)
  return filter_count_;
}
 void SlotConfig::set_filter_count(::google::protobuf::uint32 value) {
  
  filter_count_ = value;
  // @@protoc_insertion_point(field_set:protos.SlotConfig.filter_count)
}

// optional int32 cross = 6;
void SlotConfig::clear_cross() {
  cross_ = 0;
}
 ::google::protobuf::int32 SlotConfig::cross() const {
  // @@protoc_insertion_point(field_get:protos.SlotConfig.cross)
  return cross_;
}
 void SlotConfig::set_cross(::google::protobuf::int32 value) {
  
  cross_ = value;
  // @@protoc_insertion_point(field_set:protos.SlotConfig.cross)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllConfig::kEmbeddingDimFieldNumber;
const int AllConfig::kFtrlConfigFieldNumber;
const int AllConfig::kSlotWhitelistFieldNumber;
const int AllConfig::kNeedOutputModelFieldNumber;
const int AllConfig::kSaveModelPathFieldNumber;
const int AllConfig::kSaveIncModelPathFieldNumber;
const int AllConfig::kLoadModelPathFieldNumber;
const int AllConfig::kLoadIncModelPathFieldNumber;
const int AllConfig::kTrainPathListFieldNumber;
const int AllConfig::kTestPathListFieldNumber;
const int AllConfig::kFilterCountFieldNumber;
const int AllConfig::kDelayStepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllConfig::AllConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protos.AllConfig)
}

void AllConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ftrl_config_ = const_cast< ::protos::FtrlConfig*>(&::protos::FtrlConfig::default_instance());
}

AllConfig::AllConfig(const AllConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protos.AllConfig)
}

void AllConfig::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  embedding_dim_ = 0u;
  ftrl_config_ = NULL;
  need_output_model_ = false;
  save_model_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_inc_model_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_model_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_inc_model_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filter_count_ = 0u;
  delay_step_ = 0u;
}

AllConfig::~AllConfig() {
  // @@protoc_insertion_point(destructor:protos.AllConfig)
  SharedDtor();
}

void AllConfig::SharedDtor() {
  save_model_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_inc_model_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_model_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_inc_model_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete ftrl_config_;
  }
}

void AllConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllConfig_descriptor_;
}

const AllConfig& AllConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_config_2eproto();
  return *default_instance_;
}

AllConfig* AllConfig::default_instance_ = NULL;

AllConfig* AllConfig::New(::google::protobuf::Arena* arena) const {
  AllConfig* n = new AllConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:protos.AllConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AllConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AllConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(embedding_dim_, need_output_model_);
  if (GetArenaNoVirtual() == NULL && ftrl_config_ != NULL) delete ftrl_config_;
  ftrl_config_ = NULL;
  save_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_inc_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  load_inc_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(filter_count_, delay_step_);

#undef ZR_HELPER_
#undef ZR_

  slot_whitelist_.Clear();
  train_path_list_.Clear();
  test_path_list_.Clear();
}

bool AllConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protos.AllConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 embedding_dim = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &embedding_dim_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ftrl_config;
        break;
      }

      // optional .protos.FtrlConfig ftrl_config = 2;
      case 2: {
        if (tag == 18) {
         parse_ftrl_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ftrl_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_slot_whitelist;
        break;
      }

      // repeated .protos.SlotConfig slot_whitelist = 3;
      case 3: {
        if (tag == 26) {
         parse_slot_whitelist:
          DO_(input->IncrementRecursionDepth());
         parse_loop_slot_whitelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_slot_whitelist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_slot_whitelist;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_need_output_model;
        break;
      }

      // optional bool need_output_model = 4;
      case 4: {
        if (tag == 32) {
         parse_need_output_model:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &need_output_model_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_save_model_path;
        break;
      }

      // optional string save_model_path = 5;
      case 5: {
        if (tag == 42) {
         parse_save_model_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_save_model_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->save_model_path().data(), this->save_model_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.AllConfig.save_model_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_save_inc_model_path;
        break;
      }

      // optional string save_inc_model_path = 6;
      case 6: {
        if (tag == 50) {
         parse_save_inc_model_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_save_inc_model_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->save_inc_model_path().data(), this->save_inc_model_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.AllConfig.save_inc_model_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_load_model_path;
        break;
      }

      // optional string load_model_path = 7;
      case 7: {
        if (tag == 58) {
         parse_load_model_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_load_model_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->load_model_path().data(), this->load_model_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.AllConfig.load_model_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_load_inc_model_path;
        break;
      }

      // optional string load_inc_model_path = 8;
      case 8: {
        if (tag == 66) {
         parse_load_inc_model_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_load_inc_model_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->load_inc_model_path().data(), this->load_inc_model_path().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.AllConfig.load_inc_model_path"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_train_path_list;
        break;
      }

      // repeated string train_path_list = 9;
      case 9: {
        if (tag == 74) {
         parse_train_path_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_train_path_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->train_path_list(this->train_path_list_size() - 1).data(),
            this->train_path_list(this->train_path_list_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.AllConfig.train_path_list"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_train_path_list;
        if (input->ExpectTag(82)) goto parse_test_path_list;
        break;
      }

      // repeated string test_path_list = 10;
      case 10: {
        if (tag == 82) {
         parse_test_path_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_test_path_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->test_path_list(this->test_path_list_size() - 1).data(),
            this->test_path_list(this->test_path_list_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "protos.AllConfig.test_path_list"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_test_path_list;
        if (input->ExpectTag(88)) goto parse_filter_count;
        break;
      }

      // optional uint32 filter_count = 11;
      case 11: {
        if (tag == 88) {
         parse_filter_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filter_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_delay_step;
        break;
      }

      // optional uint32 delay_step = 12;
      case 12: {
        if (tag == 96) {
         parse_delay_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delay_step_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protos.AllConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protos.AllConfig)
  return false;
#undef DO_
}

void AllConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protos.AllConfig)
  // optional uint32 embedding_dim = 1;
  if (this->embedding_dim() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->embedding_dim(), output);
  }

  // optional .protos.FtrlConfig ftrl_config = 2;
  if (this->has_ftrl_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ftrl_config_, output);
  }

  // repeated .protos.SlotConfig slot_whitelist = 3;
  for (unsigned int i = 0, n = this->slot_whitelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->slot_whitelist(i), output);
  }

  // optional bool need_output_model = 4;
  if (this->need_output_model() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->need_output_model(), output);
  }

  // optional string save_model_path = 5;
  if (this->save_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_model_path().data(), this->save_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.save_model_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->save_model_path(), output);
  }

  // optional string save_inc_model_path = 6;
  if (this->save_inc_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_inc_model_path().data(), this->save_inc_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.save_inc_model_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->save_inc_model_path(), output);
  }

  // optional string load_model_path = 7;
  if (this->load_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_model_path().data(), this->load_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.load_model_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->load_model_path(), output);
  }

  // optional string load_inc_model_path = 8;
  if (this->load_inc_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_inc_model_path().data(), this->load_inc_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.load_inc_model_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->load_inc_model_path(), output);
  }

  // repeated string train_path_list = 9;
  for (int i = 0; i < this->train_path_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->train_path_list(i).data(), this->train_path_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.train_path_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->train_path_list(i), output);
  }

  // repeated string test_path_list = 10;
  for (int i = 0; i < this->test_path_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_path_list(i).data(), this->test_path_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.test_path_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->test_path_list(i), output);
  }

  // optional uint32 filter_count = 11;
  if (this->filter_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->filter_count(), output);
  }

  // optional uint32 delay_step = 12;
  if (this->delay_step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->delay_step(), output);
  }

  // @@protoc_insertion_point(serialize_end:protos.AllConfig)
}

::google::protobuf::uint8* AllConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:protos.AllConfig)
  // optional uint32 embedding_dim = 1;
  if (this->embedding_dim() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->embedding_dim(), target);
  }

  // optional .protos.FtrlConfig ftrl_config = 2;
  if (this->has_ftrl_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ftrl_config_, false, target);
  }

  // repeated .protos.SlotConfig slot_whitelist = 3;
  for (unsigned int i = 0, n = this->slot_whitelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->slot_whitelist(i), false, target);
  }

  // optional bool need_output_model = 4;
  if (this->need_output_model() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->need_output_model(), target);
  }

  // optional string save_model_path = 5;
  if (this->save_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_model_path().data(), this->save_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.save_model_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->save_model_path(), target);
  }

  // optional string save_inc_model_path = 6;
  if (this->save_inc_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_inc_model_path().data(), this->save_inc_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.save_inc_model_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->save_inc_model_path(), target);
  }

  // optional string load_model_path = 7;
  if (this->load_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_model_path().data(), this->load_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.load_model_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->load_model_path(), target);
  }

  // optional string load_inc_model_path = 8;
  if (this->load_inc_model_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->load_inc_model_path().data(), this->load_inc_model_path().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.load_inc_model_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->load_inc_model_path(), target);
  }

  // repeated string train_path_list = 9;
  for (int i = 0; i < this->train_path_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->train_path_list(i).data(), this->train_path_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.train_path_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(9, this->train_path_list(i), target);
  }

  // repeated string test_path_list = 10;
  for (int i = 0; i < this->test_path_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->test_path_list(i).data(), this->test_path_list(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "protos.AllConfig.test_path_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->test_path_list(i), target);
  }

  // optional uint32 filter_count = 11;
  if (this->filter_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->filter_count(), target);
  }

  // optional uint32 delay_step = 12;
  if (this->delay_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->delay_step(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:protos.AllConfig)
  return target;
}

int AllConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:protos.AllConfig)
  int total_size = 0;

  // optional uint32 embedding_dim = 1;
  if (this->embedding_dim() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->embedding_dim());
  }

  // optional .protos.FtrlConfig ftrl_config = 2;
  if (this->has_ftrl_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ftrl_config_);
  }

  // optional bool need_output_model = 4;
  if (this->need_output_model() != 0) {
    total_size += 1 + 1;
  }

  // optional string save_model_path = 5;
  if (this->save_model_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->save_model_path());
  }

  // optional string save_inc_model_path = 6;
  if (this->save_inc_model_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->save_inc_model_path());
  }

  // optional string load_model_path = 7;
  if (this->load_model_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->load_model_path());
  }

  // optional string load_inc_model_path = 8;
  if (this->load_inc_model_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->load_inc_model_path());
  }

  // optional uint32 filter_count = 11;
  if (this->filter_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->filter_count());
  }

  // optional uint32 delay_step = 12;
  if (this->delay_step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delay_step());
  }

  // repeated .protos.SlotConfig slot_whitelist = 3;
  total_size += 1 * this->slot_whitelist_size();
  for (int i = 0; i < this->slot_whitelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_whitelist(i));
  }

  // repeated string train_path_list = 9;
  total_size += 1 * this->train_path_list_size();
  for (int i = 0; i < this->train_path_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->train_path_list(i));
  }

  // repeated string test_path_list = 10;
  total_size += 1 * this->test_path_list_size();
  for (int i = 0; i < this->test_path_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->test_path_list(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protos.AllConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AllConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AllConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protos.AllConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protos.AllConfig)
    MergeFrom(*source);
  }
}

void AllConfig::MergeFrom(const AllConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protos.AllConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  slot_whitelist_.MergeFrom(from.slot_whitelist_);
  train_path_list_.MergeFrom(from.train_path_list_);
  test_path_list_.MergeFrom(from.test_path_list_);
  if (from.embedding_dim() != 0) {
    set_embedding_dim(from.embedding_dim());
  }
  if (from.has_ftrl_config()) {
    mutable_ftrl_config()->::protos::FtrlConfig::MergeFrom(from.ftrl_config());
  }
  if (from.need_output_model() != 0) {
    set_need_output_model(from.need_output_model());
  }
  if (from.save_model_path().size() > 0) {

    save_model_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_model_path_);
  }
  if (from.save_inc_model_path().size() > 0) {

    save_inc_model_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_inc_model_path_);
  }
  if (from.load_model_path().size() > 0) {

    load_model_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.load_model_path_);
  }
  if (from.load_inc_model_path().size() > 0) {

    load_inc_model_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.load_inc_model_path_);
  }
  if (from.filter_count() != 0) {
    set_filter_count(from.filter_count());
  }
  if (from.delay_step() != 0) {
    set_delay_step(from.delay_step());
  }
}

void AllConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protos.AllConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllConfig::CopyFrom(const AllConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protos.AllConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllConfig::IsInitialized() const {

  return true;
}

void AllConfig::Swap(AllConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllConfig::InternalSwap(AllConfig* other) {
  std::swap(embedding_dim_, other->embedding_dim_);
  std::swap(ftrl_config_, other->ftrl_config_);
  slot_whitelist_.UnsafeArenaSwap(&other->slot_whitelist_);
  std::swap(need_output_model_, other->need_output_model_);
  save_model_path_.Swap(&other->save_model_path_);
  save_inc_model_path_.Swap(&other->save_inc_model_path_);
  load_model_path_.Swap(&other->load_model_path_);
  load_inc_model_path_.Swap(&other->load_inc_model_path_);
  train_path_list_.UnsafeArenaSwap(&other->train_path_list_);
  test_path_list_.UnsafeArenaSwap(&other->test_path_list_);
  std::swap(filter_count_, other->filter_count_);
  std::swap(delay_step_, other->delay_step_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllConfig_descriptor_;
  metadata.reflection = AllConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllConfig

// optional uint32 embedding_dim = 1;
void AllConfig::clear_embedding_dim() {
  embedding_dim_ = 0u;
}
 ::google::protobuf::uint32 AllConfig::embedding_dim() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.embedding_dim)
  return embedding_dim_;
}
 void AllConfig::set_embedding_dim(::google::protobuf::uint32 value) {
  
  embedding_dim_ = value;
  // @@protoc_insertion_point(field_set:protos.AllConfig.embedding_dim)
}

// optional .protos.FtrlConfig ftrl_config = 2;
bool AllConfig::has_ftrl_config() const {
  return !_is_default_instance_ && ftrl_config_ != NULL;
}
void AllConfig::clear_ftrl_config() {
  if (GetArenaNoVirtual() == NULL && ftrl_config_ != NULL) delete ftrl_config_;
  ftrl_config_ = NULL;
}
const ::protos::FtrlConfig& AllConfig::ftrl_config() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.ftrl_config)
  return ftrl_config_ != NULL ? *ftrl_config_ : *default_instance_->ftrl_config_;
}
::protos::FtrlConfig* AllConfig::mutable_ftrl_config() {
  
  if (ftrl_config_ == NULL) {
    ftrl_config_ = new ::protos::FtrlConfig;
  }
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.ftrl_config)
  return ftrl_config_;
}
::protos::FtrlConfig* AllConfig::release_ftrl_config() {
  // @@protoc_insertion_point(field_release:protos.AllConfig.ftrl_config)
  
  ::protos::FtrlConfig* temp = ftrl_config_;
  ftrl_config_ = NULL;
  return temp;
}
void AllConfig::set_allocated_ftrl_config(::protos::FtrlConfig* ftrl_config) {
  delete ftrl_config_;
  ftrl_config_ = ftrl_config;
  if (ftrl_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:protos.AllConfig.ftrl_config)
}

// repeated .protos.SlotConfig slot_whitelist = 3;
int AllConfig::slot_whitelist_size() const {
  return slot_whitelist_.size();
}
void AllConfig::clear_slot_whitelist() {
  slot_whitelist_.Clear();
}
const ::protos::SlotConfig& AllConfig::slot_whitelist(int index) const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.slot_whitelist)
  return slot_whitelist_.Get(index);
}
::protos::SlotConfig* AllConfig::mutable_slot_whitelist(int index) {
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.slot_whitelist)
  return slot_whitelist_.Mutable(index);
}
::protos::SlotConfig* AllConfig::add_slot_whitelist() {
  // @@protoc_insertion_point(field_add:protos.AllConfig.slot_whitelist)
  return slot_whitelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::protos::SlotConfig >*
AllConfig::mutable_slot_whitelist() {
  // @@protoc_insertion_point(field_mutable_list:protos.AllConfig.slot_whitelist)
  return &slot_whitelist_;
}
const ::google::protobuf::RepeatedPtrField< ::protos::SlotConfig >&
AllConfig::slot_whitelist() const {
  // @@protoc_insertion_point(field_list:protos.AllConfig.slot_whitelist)
  return slot_whitelist_;
}

// optional bool need_output_model = 4;
void AllConfig::clear_need_output_model() {
  need_output_model_ = false;
}
 bool AllConfig::need_output_model() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.need_output_model)
  return need_output_model_;
}
 void AllConfig::set_need_output_model(bool value) {
  
  need_output_model_ = value;
  // @@protoc_insertion_point(field_set:protos.AllConfig.need_output_model)
}

// optional string save_model_path = 5;
void AllConfig::clear_save_model_path() {
  save_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AllConfig::save_model_path() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.save_model_path)
  return save_model_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_save_model_path(const ::std::string& value) {
  
  save_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.AllConfig.save_model_path)
}
 void AllConfig::set_save_model_path(const char* value) {
  
  save_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.AllConfig.save_model_path)
}
 void AllConfig::set_save_model_path(const char* value, size_t size) {
  
  save_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.AllConfig.save_model_path)
}
 ::std::string* AllConfig::mutable_save_model_path() {
  
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.save_model_path)
  return save_model_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AllConfig::release_save_model_path() {
  // @@protoc_insertion_point(field_release:protos.AllConfig.save_model_path)
  
  return save_model_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_allocated_save_model_path(::std::string* save_model_path) {
  if (save_model_path != NULL) {
    
  } else {
    
  }
  save_model_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_model_path);
  // @@protoc_insertion_point(field_set_allocated:protos.AllConfig.save_model_path)
}

// optional string save_inc_model_path = 6;
void AllConfig::clear_save_inc_model_path() {
  save_inc_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AllConfig::save_inc_model_path() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.save_inc_model_path)
  return save_inc_model_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_save_inc_model_path(const ::std::string& value) {
  
  save_inc_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.AllConfig.save_inc_model_path)
}
 void AllConfig::set_save_inc_model_path(const char* value) {
  
  save_inc_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.AllConfig.save_inc_model_path)
}
 void AllConfig::set_save_inc_model_path(const char* value, size_t size) {
  
  save_inc_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.AllConfig.save_inc_model_path)
}
 ::std::string* AllConfig::mutable_save_inc_model_path() {
  
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.save_inc_model_path)
  return save_inc_model_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AllConfig::release_save_inc_model_path() {
  // @@protoc_insertion_point(field_release:protos.AllConfig.save_inc_model_path)
  
  return save_inc_model_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_allocated_save_inc_model_path(::std::string* save_inc_model_path) {
  if (save_inc_model_path != NULL) {
    
  } else {
    
  }
  save_inc_model_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_inc_model_path);
  // @@protoc_insertion_point(field_set_allocated:protos.AllConfig.save_inc_model_path)
}

// optional string load_model_path = 7;
void AllConfig::clear_load_model_path() {
  load_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AllConfig::load_model_path() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.load_model_path)
  return load_model_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_load_model_path(const ::std::string& value) {
  
  load_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.AllConfig.load_model_path)
}
 void AllConfig::set_load_model_path(const char* value) {
  
  load_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.AllConfig.load_model_path)
}
 void AllConfig::set_load_model_path(const char* value, size_t size) {
  
  load_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.AllConfig.load_model_path)
}
 ::std::string* AllConfig::mutable_load_model_path() {
  
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.load_model_path)
  return load_model_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AllConfig::release_load_model_path() {
  // @@protoc_insertion_point(field_release:protos.AllConfig.load_model_path)
  
  return load_model_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_allocated_load_model_path(::std::string* load_model_path) {
  if (load_model_path != NULL) {
    
  } else {
    
  }
  load_model_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), load_model_path);
  // @@protoc_insertion_point(field_set_allocated:protos.AllConfig.load_model_path)
}

// optional string load_inc_model_path = 8;
void AllConfig::clear_load_inc_model_path() {
  load_inc_model_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AllConfig::load_inc_model_path() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.load_inc_model_path)
  return load_inc_model_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_load_inc_model_path(const ::std::string& value) {
  
  load_inc_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protos.AllConfig.load_inc_model_path)
}
 void AllConfig::set_load_inc_model_path(const char* value) {
  
  load_inc_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protos.AllConfig.load_inc_model_path)
}
 void AllConfig::set_load_inc_model_path(const char* value, size_t size) {
  
  load_inc_model_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protos.AllConfig.load_inc_model_path)
}
 ::std::string* AllConfig::mutable_load_inc_model_path() {
  
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.load_inc_model_path)
  return load_inc_model_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AllConfig::release_load_inc_model_path() {
  // @@protoc_insertion_point(field_release:protos.AllConfig.load_inc_model_path)
  
  return load_inc_model_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AllConfig::set_allocated_load_inc_model_path(::std::string* load_inc_model_path) {
  if (load_inc_model_path != NULL) {
    
  } else {
    
  }
  load_inc_model_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), load_inc_model_path);
  // @@protoc_insertion_point(field_set_allocated:protos.AllConfig.load_inc_model_path)
}

// repeated string train_path_list = 9;
int AllConfig::train_path_list_size() const {
  return train_path_list_.size();
}
void AllConfig::clear_train_path_list() {
  train_path_list_.Clear();
}
 const ::std::string& AllConfig::train_path_list(int index) const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.train_path_list)
  return train_path_list_.Get(index);
}
 ::std::string* AllConfig::mutable_train_path_list(int index) {
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.train_path_list)
  return train_path_list_.Mutable(index);
}
 void AllConfig::set_train_path_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protos.AllConfig.train_path_list)
  train_path_list_.Mutable(index)->assign(value);
}
 void AllConfig::set_train_path_list(int index, const char* value) {
  train_path_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protos.AllConfig.train_path_list)
}
 void AllConfig::set_train_path_list(int index, const char* value, size_t size) {
  train_path_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protos.AllConfig.train_path_list)
}
 ::std::string* AllConfig::add_train_path_list() {
  // @@protoc_insertion_point(field_add_mutable:protos.AllConfig.train_path_list)
  return train_path_list_.Add();
}
 void AllConfig::add_train_path_list(const ::std::string& value) {
  train_path_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protos.AllConfig.train_path_list)
}
 void AllConfig::add_train_path_list(const char* value) {
  train_path_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protos.AllConfig.train_path_list)
}
 void AllConfig::add_train_path_list(const char* value, size_t size) {
  train_path_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protos.AllConfig.train_path_list)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllConfig::train_path_list() const {
  // @@protoc_insertion_point(field_list:protos.AllConfig.train_path_list)
  return train_path_list_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
AllConfig::mutable_train_path_list() {
  // @@protoc_insertion_point(field_mutable_list:protos.AllConfig.train_path_list)
  return &train_path_list_;
}

// repeated string test_path_list = 10;
int AllConfig::test_path_list_size() const {
  return test_path_list_.size();
}
void AllConfig::clear_test_path_list() {
  test_path_list_.Clear();
}
 const ::std::string& AllConfig::test_path_list(int index) const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.test_path_list)
  return test_path_list_.Get(index);
}
 ::std::string* AllConfig::mutable_test_path_list(int index) {
  // @@protoc_insertion_point(field_mutable:protos.AllConfig.test_path_list)
  return test_path_list_.Mutable(index);
}
 void AllConfig::set_test_path_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:protos.AllConfig.test_path_list)
  test_path_list_.Mutable(index)->assign(value);
}
 void AllConfig::set_test_path_list(int index, const char* value) {
  test_path_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:protos.AllConfig.test_path_list)
}
 void AllConfig::set_test_path_list(int index, const char* value, size_t size) {
  test_path_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protos.AllConfig.test_path_list)
}
 ::std::string* AllConfig::add_test_path_list() {
  // @@protoc_insertion_point(field_add_mutable:protos.AllConfig.test_path_list)
  return test_path_list_.Add();
}
 void AllConfig::add_test_path_list(const ::std::string& value) {
  test_path_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:protos.AllConfig.test_path_list)
}
 void AllConfig::add_test_path_list(const char* value) {
  test_path_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:protos.AllConfig.test_path_list)
}
 void AllConfig::add_test_path_list(const char* value, size_t size) {
  test_path_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:protos.AllConfig.test_path_list)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllConfig::test_path_list() const {
  // @@protoc_insertion_point(field_list:protos.AllConfig.test_path_list)
  return test_path_list_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
AllConfig::mutable_test_path_list() {
  // @@protoc_insertion_point(field_mutable_list:protos.AllConfig.test_path_list)
  return &test_path_list_;
}

// optional uint32 filter_count = 11;
void AllConfig::clear_filter_count() {
  filter_count_ = 0u;
}
 ::google::protobuf::uint32 AllConfig::filter_count() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.filter_count)
  return filter_count_;
}
 void AllConfig::set_filter_count(::google::protobuf::uint32 value) {
  
  filter_count_ = value;
  // @@protoc_insertion_point(field_set:protos.AllConfig.filter_count)
}

// optional uint32 delay_step = 12;
void AllConfig::clear_delay_step() {
  delay_step_ = 0u;
}
 ::google::protobuf::uint32 AllConfig::delay_step() const {
  // @@protoc_insertion_point(field_get:protos.AllConfig.delay_step)
  return delay_step_;
}
 void AllConfig::set_delay_step(::google::protobuf::uint32 value) {
  
  delay_step_ = value;
  // @@protoc_insertion_point(field_set:protos.AllConfig.delay_step)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos

// @@protoc_insertion_point(global_scope)
